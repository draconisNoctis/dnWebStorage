{"version":3,"sources":["../../src/_tests/dnJsonRpc.spec.ts"],"names":[],"mappings":"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","file":"dnJsonRpc.spec.js","sourceRoot":"","sourcesContent":["/// <reference path=\"../../typings/jasmine/jasmine.d.ts\" />\n/// <reference path=\"../../typings/angularjs/angular-mocks.d.ts\" />\n/// <reference path=\"../dnJsonRpc.ts\" />\n\ndescribe('dnJsonRpc', () => {\n\t\n\t// beforeEach(() => {\n\t// \tangular.module('dnJsonRpcSpec', ['dnJsonRpc']);\n\n\t// \tmodule('dnJsonRpc', 'dnJsonRpcSpec');\n\n\t// \tinject(() => {});\n\t// });\n\t\n\tbeforeEach(module('dnJsonRpc'));\n\n\tdescribe('DnJsonRpcService', () => {\n\t\tvar service : any, pluralCatSpy : any, httpBackend, rootScope, notCalledSpy;\n\n\t\tbeforeEach(inject(($httpBackend, $rootScope) => {\n\t\t\thttpBackend = $httpBackend;\n\t\t\trootScope = $rootScope;\n\t\t\tnotCalledSpy = jasmine.createSpy('notCalledSpy');\n\t\t}));\n\n\t\tafterEach(() => {\n\t\t\thttpBackend.verifyNoOutstandingExpectation();\n\t\t\thttpBackend.verifyNoOutstandingRequest();\n\t\t\tdnJsonRpc.$$internalIdCounter = 0;\n\t\t});\n\n\t\tdescribe('request', () => {\n\t\t\tit('should return resolving promise on valid request(without params) and response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\",\"id\":\"1\"}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\",\"result\":\"validResponse\",\"id\":\"1\"}');\n\n\t\t\t\tDnJsonRpcService.request('/rpc', 'valid_request_valid_response').then(result => {\n\t\t\t\t\texpect(result).toBe('validResponse');\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid json response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_json_response\",\"id\":\"1\"}')\n\t\t\t\t\t.respond('{\"jsonrpc:\"2.0\"');\n\n\t\t\t\tDnJsonRpcService.request('/rpc', 'valid_request_invalid_json_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Parse error');\n\t\t\t\t\texpect(error.code).toBe(-33700);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t\texpect(error.toString()).toBe('(-33700) Parse error');\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response\",\"id\":\"1\"}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\",\"id\":\"1\"}');\n\n\t\t\t\tDnJsonRpcService.request('/rpc', 'valid_request_invalid_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Invalid response');\n\t\t\t\t\texpect(error.code).toBe(-33600);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid http response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_http_response\",\"id\":\"1\"}')\n\t\t\t\t\t.respond(404, 'Error: Not found');\n\n\t\t\t\tDnJsonRpcService.request('/rpc', 'valid_request_invalid_http_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcHttpError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Not found');\n\t\t\t\t\texpect(error.code).toBe(404);\n\t\t\t\t\texpect(error.data).toBe('Error: Not found')\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and response with mismatching id', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response\",\"id\":\"1\"}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\",\"result\":\"foobar\",\"id\":\"2\"}');\n\n\t\t\t\tDnJsonRpcService.request('/rpc', 'valid_request_invalid_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Invalid response');\n\t\t\t\t\texpect(error.code).toBe(-33600);\n\t\t\t\t\texpect(error.data).toEqual({ type: 'ID_MISMATCH', expected: \"1\", given: \"2\" })\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return resolving promise on valid request(with array params) and response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\",\"id\":\"1\",\"params\":[\"a\",\"b\"]}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\",\"result\":[\"a\",\"b\"],\"id\":\"1\"}');\n\n\t\t\t\tDnJsonRpcService.request('/rpc', 'valid_request_valid_response', ['a', 'b']).then(result => {\n\t\t\t\t\texpect(result).toEqual(['a', 'b']);\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return resolving promise on valid request(with object params) and response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\",\"id\":\"1\",\"params\":{\"foo\":\"bar\"}}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\",\"result\":{\"foo\":\"bar\"},\"id\":\"1\"}');\n\n\t\t\t\tDnJsonRpcService.request('/rpc', 'valid_request_valid_response', { foo: 'bar' }).then(result => {\n\t\t\t\t\texpect(result).toEqual({ foo: 'bar' });\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request and error response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_error_response\",\"id\":\"1\"}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\",\"error\":{\"code\":123,\"message\":\"Foobar\"},\"id\":\"1\"}');\n\n\t\t\t\tDnJsonRpcService.request('/rpc', 'valid_request_error_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcRequestError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Foobar');\n\t\t\t\t\texpect(error.code).toBe(123);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\t\t});\n\t\t\n\t\tdescribe('notify', () => {\n\t\t\tit('should return resolving promise on valid request(without params)', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/notify', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\"}')\n\t\t\t\t\t.respond('');\n\n\t\t\t\tDnJsonRpcService.notify('/rpc/notify', 'valid_request_valid_response').then(result => {\n\t\t\t\t\texpect(result).toBe(null);\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid json response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/notify', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_json_response\"}')\n\t\t\t\t\t.respond('{\"jsonrpc:\"2.0\"');\n\n\t\t\t\tDnJsonRpcService.notify('/rpc/notify', 'valid_request_invalid_json_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Parse error');\n\t\t\t\t\texpect(error.code).toBe(-33700);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/notify', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response\"}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\"}');\n\t\t\t\tDnJsonRpcService.notify('/rpc/notify', 'valid_request_invalid_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Invalid response');\n\t\t\t\t\texpect(error.code).toBe(-33600);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/notify', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response\"}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\"}');\n\n\t\t\t\tDnJsonRpcService.notify('/rpc/notify', 'valid_request_invalid_response').catch(error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Invalid response');\n\t\t\t\t\texpect(error.code).toBe(-33600);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid http response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/notify', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_http_response\"}')\n\t\t\t\t\t.respond(404, 'Error: Not found');\n\n\t\t\t\tDnJsonRpcService.notify('/rpc/notify', 'valid_request_invalid_http_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcHttpError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Not found');\n\t\t\t\t\texpect(error.code).toBe(404);\n\t\t\t\t\texpect(error.data).toBe('Error: Not found')\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return resolving promise on valid request(with array params) and response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/notify', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\",\"params\":[\"a\",\"b\"]}')\n\t\t\t\t\t.respond('');\n\n\t\t\t\tDnJsonRpcService.notify('/rpc/notify', 'valid_request_valid_response', ['a', 'b']).then(result => {\n\t\t\t\t\texpect(result).toBe(null);\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return resolving promise on valid request(with object params) and response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/notify', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\",\"params\":{\"foo\":\"bar\"}}')\n\t\t\t\t\t.respond('');\n\n\t\t\t\tDnJsonRpcService.notify('/rpc/notify', 'valid_request_valid_response', { foo: 'bar' }).then(result => {\n\t\t\t\t\texpect(result).toBe(null);\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request and error response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/notify', '{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_error_response\"}')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\",\"error\":{\"code\":123,\"message\":\"Foobar\"}}');\n\n\t\t\t\tDnJsonRpcService.notify('/rpc/notify', 'valid_request_error_response').then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcRequestError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Foobar');\n\t\t\t\t\texpect(error.code).toBe(123);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\t\t});\n\n\t\tdescribe('batch', () => {\n\t\t\tit('should resolve on empty batch', inject((DnJsonRpcService) => {\n\t\t\t\tvar spy = jasmine.createSpy('batch#then');\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.exec().then(spy, notCalledSpy);\n\t\t\t\trootScope.$apply();\n\t\t\t\texpect(spy).toHaveBeenCalled();\n\t\t\t\texpect(spy.calls.argsFor(0)[0]).toEqual([]);\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid json response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_json_response\",\"id\":\"1\"}]')\n\t\t\t\t\t.respond('[foobar');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.request('valid_request_invalid_json_response')\n\t\t\t\t\t.exec().then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Parse error');\n\t\t\t\t\texpect(error.code).toBe(-33700);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and invalid response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response\",\"id\":\"1\"}]')\n\t\t\t\t\t.respond('{}');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.request('valid_request_invalid_response')\n\t\t\t\t\t.exec().then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Invalid response');\n\t\t\t\t\texpect(error.code).toBe(-33600);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request(without params) and single error response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_single_error_response\",\"id\":\"1\"}]')\n\t\t\t\t\t.respond('{\"jsonrpc\":\"2.0\",\"error\":{\"code\":123,\"message\":\"Foobar\"},\"id\":\"1\"}');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.request('valid_request_single_error_response')\n\t\t\t\t\t.exec().then(notCalledSpy ,error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcRequestError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Foobar');\n\t\t\t\t\texpect(error.code).toBe(123);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise when number returning responses differs from number of requests(not notifications)', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response1\",\"id\":\"1\"},{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response2\",\"id\":\"2\"}]')\n\t\t\t\t\t.respond('[{\"jsonrpc\":\"2.0\",\"result\":\"validResponse\",\"id\":\"1\"}]');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.request('valid_request_invalid_response1')\n\t\t\t\t\t.request('valid_request_invalid_response2')\n\t\t\t\t\t.exec().then(notCalledSpy ,error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Invalid response');\n\t\t\t\t\texpect(error.code).toBe(-33600);\n\t\t\t\t\texpect(error.data).toBeUndefined();\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a resolving promise when valid response contains errors', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\",\"id\":\"1\"},{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_error_response\",\"id\":\"2\"}]')\n\t\t\t\t\t.respond('[{\"jsonrpc\":\"2.0\",\"result\":\"validResponse\",\"id\":\"1\"},{\"jsonrpc\":\"2.0\",\"error\":{\"code\":123,\"message\":\"Foobar\"},\"id\":\"2\"}]');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.request('valid_request_valid_response')\n\t\t\t\t\t.request('valid_request_error_response')\n\t\t\t\t\t.exec().then(response => {\n\t\t\t\t\texpect(response[0]).toBe('validResponse');\n\n\t\t\t\t\texpect(response[1] instanceof dnJsonRpc.JsonRpcRequestError).toBe(true);\n\t\t\t\t\texpect(response[1].message).toBe('Foobar');\n\t\t\t\t\texpect(response[1].code).toBe(123);\n\t\t\t\t\texpect(response[1].data).toBeUndefined();\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a resolving promise when valid response contains invalid responses', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\",\"id\":\"1\"},{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response\",\"id\":\"2\"}]')\n\t\t\t\t\t.respond('[{\"jsonrpc\":\"2.0\",\"result\":\"validResponse\",\"id\":\"1\"},{}]');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.request('valid_request_valid_response')\n\t\t\t\t\t.request('valid_request_invalid_response')\n\t\t\t\t\t.exec().then(response => {\n\t\t\t\t\texpect(response[0]).toBe('validResponse');\n\n\t\t\t\t\texpect(response[1] instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(response[1].message).toBe('Invalid response');\n\t\t\t\t\texpect(response[1].code).toBe(-33600);\n\t\t\t\t\texpect(response[1].data).toBeUndefined();\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a resolving promise when valid response contains mismatching id responses', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_valid_response\",\"id\":\"1\"},{\"jsonrpc\":\"2.0\",\"method\":\"valid_request_invalid_response\",\"id\":\"2\"}]')\n\t\t\t\t\t.respond('[{\"jsonrpc\":\"2.0\",\"result\":\"validResponse\",\"id\":\"1\"},{\"jsonrpc\":\"2.0\",\"result\":\"validResponse\",\"id\":\"3\"}]');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.request('valid_request_valid_response')\n\t\t\t\t\t.request('valid_request_invalid_response')\n\t\t\t\t\t.exec().then(response => {\n\t\t\t\t\texpect(response[0]).toBe('validResponse');\n\n\t\t\t\t\texpect(response[1] instanceof dnJsonRpc.JsonRpcResponseError).toBe(true);\n\t\t\t\t\texpect(response[1].message).toBe('Invalid response');\n\t\t\t\t\texpect(response[1].code).toBe(-33600);\n\t\t\t\t\texpect(response[1].data).toEqual({ type: 'ID_MISMATCH', expected: ['1','2'], given: '3' });\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should resolve an empty array, when only notifications are called', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"notify1\"},{\"jsonrpc\":\"2.0\",\"method\":\"notify2\",\"params\":{\"foo\":\"bar\"}}]')\n\t\t\t\t\t.respond('');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.notify('notify1')\n\t\t\t\t\t.notify('notify2', { foo: 'bar' })\n\t\t\t\t\t.exec().then(response => {\n\t\t\t\t\texpect(response).toEqual([]);\n\t\t\t\t}, notCalledSpy);\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\n\t\t\tit('should return a rejecting promise on valid request and invalid http response', inject((DnJsonRpcService) => {\n\t\t\t\thttpBackend.expect('POST', '/rpc/batch', '[{\"jsonrpc\":\"2.0\",\"method\":\"notify1\"},{\"jsonrpc\":\"2.0\",\"method\":\"notify2\",\"params\":{\"foo\":\"bar\"}}]')\n\t\t\t\t\t.respond(404, 'Error: Not found');\n\n\t\t\t\tDnJsonRpcService.batch('/rpc/batch')\n\t\t\t\t\t.notify('notify1')\n\t\t\t\t\t.notify('notify2', { foo: 'bar' })\n\t\t\t\t\t.exec().then(notCalledSpy, error => {\n\t\t\t\t\texpect(error instanceof dnJsonRpc.JsonRpcHttpError).toBe(true);\n\t\t\t\t\texpect(error.message).toBe('Not found');\n\t\t\t\t\texpect(error.code).toBe(404);\n\t\t\t\t\texpect(error.data).toBe('Error: Not found')\n\t\t\t\t});\n\t\t\t\thttpBackend.flush();\n\t\t\t\texpect(notCalledSpy).not.toHaveBeenCalled();\n\t\t\t}));\n\t\t});\n\t});\n\n});"]}