{"version":3,"sources":["../../src/_tests/dnWebStorage.spec.ts"],"names":["$clearObject"],"mappings":"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","file":"dnWebStorage.spec.js","sourceRoot":"","sourcesContent":["/// <reference path=\"../../typings/jasmine/jasmine.d.ts\" />\n/// <reference path=\"../../typings/angularjs/angular-mocks.d.ts\" />\n/// <reference path=\"../dnWebStorage.ts\" />\n\nfunction $clearObject(source, dest = {}) {\n\tfor(var key in source) {\n\t\tsource.hasOwnProperty(key) && (dest[key] = source[key]);\n\t}\n\treturn dest;\n}\n\ndescribe('dnWebStorage', () => {\n\n\tbeforeEach(module('dnWebStorage'));\n\n\t['local', 'session'].forEach((type) => {\n\n\t\tvar ucfType = type.charAt(0).toUpperCase() + type.substr(1);\n\n\t\tvar storage = window[type + 'Storage'];\n\n\t\tbeforeEach(() => {\n\t\t\tstorage.clear();\n\t\t});\n\n\t\tdescribe('dn' + ucfType + 'Storage', () => {\n\t\t\tit('should provide a dn' + ucfType + 'Storage service', (<any>inject)(['dn' + ucfType + 'Storage', ($storage) => {\n\t\t\t\texpect($storage).not.toBeNull();\n\t\t\t\texpect(typeof $storage.$defaults).toBe('function');\n\t\t\t\texpect(typeof $storage.$reset).toBe('function');\n\t\t\t\texpect($clearObject($storage)).toEqual({});\n\t\t\t\tfor(var key in $storage) {\n\t\t\t\t\texpect(key).toBeUndefined();\n\t\t\t\t}\t\n\t\t\t}]));\n\n\t\t\tdescribe('$defaults', () => {\n\t\t\t\tit('should set values', (<any>inject)(['dn' + ucfType + 'Storage', ($storage) => {\n\t\t\t\t\t$storage.$defaults({ foo: 1, bar: 2 });\n\t\t\t\t\texpect($clearObject($storage)).toEqual({ foo: 1, bar: 2 });\n\t\t\t\t}]));\n\n\t\t\t\tit('should not overwrite values', (<any>inject)(['dn' + ucfType + 'Storage', ($storage) => {\n\t\t\t\t\t$storage.$defaults({ foo: 1, bar: 2 });;\n\t\t\t\t\t$storage.$defaults({ bar: 3, baz: 4 });\n\t\t\t\t\texpect($clearObject($storage)).toEqual({ foo: 1, bar: 2, baz: 4 });\n\t\t\t\t}]));\n\t\t\t});\n\n\t\t\tdescribe('$reset', () => {\n\t\t\t\tit('should reset without new values', (<any>inject)(['dn' + ucfType + 'Storage', ($storage) => {\n\t\t\t\t\t$storage.foo = 1;\n\t\t\t\t\t$storage.bar = 2;\n\t\t\t\t\t$storage.$reset();\n\t\t\t\t\texpect($clearObject($storage)).toEqual({});\n\t\t\t\t}]));\n\n\t\t\t\tit('should reset with new values', (<any>inject)(['dn' + ucfType + 'Storage', ($storage) => {\n\t\t\t\t\t$storage.foo = 1;\n\t\t\t\t\t$storage.bar = 2;\n\t\t\t\t\t$storage.$reset({ bar: 3, baz: 4 });\n\t\t\t\t\texpect($clearObject($storage)).toEqual({ bar: 3, baz: 4 });\n\t\t\t\t}]));\n\t\t\t});\n\n\t\t\tdescribe('window.' + type + 'Storage => dn' + type + 'Storage', () => {\n\t\t\t\tbeforeEach(() => {\n\t\t\t\t\tstorage.setItem('invalid-prefix', 'foobar');\n\t\t\t\t\tstorage.setItem('ngWebStorage-foo', 1);\n\t\t\t\t\tstorage.setItem('ngWebStorage-bar', '{\"name\":\"foobar\"}');\n\t\t\t\t});\n\n\t\t\t\tit('should set initial values', (<any>inject)(['dn' + ucfType + 'Storage', ($storage) => {\n\t\t\t\t\texpect($clearObject($storage)).toEqual({\n\t\t\t\t\t\tfoo: 1,\n\t\t\t\t\t\tbar: { name: 'foobar' }\n\t\t\t\t\t});\n\t\t\t\t}]));\n\n\t\t\t\tif(type === 'local') {\n\t\t\t\t\tit('should update value on StorageEvent', (<any>inject)(['dn' + ucfType + 'Storage', ($storage) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\twindow.dispatchEvent(new window['StorageEvent']('storage', {\n\t\t\t\t\t\t\t\tkey: 'ngWebStorage-foo',\n\t\t\t\t\t\t\t\tnewValue: '\"baz\"'\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tpending();\n\t\t\t\t\t\t}\n\t\t\t\t\t\texpect($storage.foo).toBe('baz');\n\t\t\t\t\t}]));\n\n\t\t\t\t\tit('should remove value on StorageEvent', (<any>inject)(['dn' + ucfType + 'Storage', ($storage) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\twindow.dispatchEvent(new window['StorageEvent']('storage', {\n\t\t\t\t\t\t\t\tkey: 'ngWebStorage-foo'\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\t\tpending();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\texpect($storage.foo).toBe(undefined);\n\t\t\t\t\t}]));\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tdescribe('dn' + ucfType + 'Storage => window.' + type + 'Storage', () => {\n\t\t\t\tit('should add values', done => (<any>inject)(['dn' + ucfType + 'Storage', '$rootScope', ($storage, $rootScope) => {\n\t\t\t\t\t$storage.foobar = { key: 'value' };\n\t\t\t\t\t$rootScope.$apply();\n\t\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\t\texpect(storage.getItem('ngWebStorage-foobar')).toEqual('{\"key\":\"value\"}');\n\t\t\t\t\t\tdone();\n\t\t\t\t\t}, 100);\n\t\t\t\t}]));\n\t\t\t});\n\n\t\t});\n\n\t\t\n\t\tdescribe('dn' + ucfType + 'StorageStore', () => {\n\t\t\tit('should `put` value to storage', (<any>inject)(['dn' + ucfType + 'StorageStore', 'dn' + ucfType + 'Storage', ($store, $storage) => {\n\t\t\t\t$store.put('foo', 'bar');\n\t\t\t\texpect($storage.foo).toBe('bar');\n\t\t\t}]));\n\n\t\t\tit('should `get` value to storage', (<any>inject)(['dn' + ucfType + 'StorageStore', 'dn' + ucfType + 'Storage', ($store, $storage) => {\n\t\t\t\t$storage.foo = 'bar';\n\t\t\t\texpect($store.get('foo')).toBe('bar');\n\t\t\t}]));\n\n\t\t\tit('should `remove` value to storage', (<any>inject)(['dn' + ucfType + 'StorageStore', 'dn' + ucfType + 'Storage', ($store, $storage) => {\n\t\t\t\t$storage.foo = 'bar';\n\t\t\t\t$store.remove('foo');\n\t\t\t\texpect($storage.foo).toBe(undefined);\n\t\t\t}]));\n\t\t});\n\n\n\t})\n})"]}