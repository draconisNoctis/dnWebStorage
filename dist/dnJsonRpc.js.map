{"version":3,"sources":["../src/dnJsonRpc.ts"],"names":["dnJsonRpc","dnJsonRpc.JsonBuilder","dnJsonRpc.JsonBuilder.constructor","dnJsonRpc.JsonBuilder.request","dnJsonRpc.JsonBuilder.notification","dnJsonRpc.JsonBuilder.generateId","dnJsonRpc.RESPONSE_ERRORS","dnJsonRpc.JsonRpcError","dnJsonRpc.JsonRpcError.constructor","dnJsonRpc.JsonRpcError.toString","dnJsonRpc.JsonRpcRequestError","dnJsonRpc.JsonRpcRequestError.constructor","dnJsonRpc.JsonRpcResponseError","dnJsonRpc.JsonRpcResponseError.constructor","dnJsonRpc.JsonRpcHttpError","dnJsonRpc.JsonRpcHttpError.constructor","dnJsonRpc.DnJsonRpcService","dnJsonRpc.DnJsonRpcService.constructor","dnJsonRpc.DnJsonRpcService.request","dnJsonRpc.DnJsonRpcService.notify","dnJsonRpc.DnJsonRpcService.batch"],"mappings":"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","file":"dnJsonRpc.js","sourceRoot":"","sourcesContent":["/* istanbul ignore next */\n/// <reference path=\"../typings/angularjs/angular.d.ts\" />\n// / <reference path=\"../typings/es6-promise/es6-promise.d.ts\" />\n\nmodule dnJsonRpc {\n\n\texport declare class Error {\n\t\tname: string;\n\t\tmessage: string;\n\t\tstack: string;\n\t\tconstructor(message?: string);\n\t}\n\n\tinterface JsonRpcNotification {\n\t\tjsonrpc: string;\n\t\tmethod: string;\n\t\tparams?: any;\n\t}\n\n\tinterface JsonRpcRequest extends JsonRpcNotification {\n\t\tid: string;\n\t}\n\n\texport var $$internalIdCounter = 0;\n\n\tclass JsonBuilder {\n\t\tstatic VERSION = '2.0';\n\n\t\trequest(method : string, id: string, params? : any[]) : JsonRpcRequest;\n\t\trequest(method : string, id: string, params? : { [argName : string] : any }) : JsonRpcRequest;\n\t\trequest(method : string, id: string, params? : any) : JsonRpcRequest {\n\t\t\tvar request : JsonRpcRequest = {\n\t\t\t\tjsonrpc: JsonBuilder.VERSION,\n\t\t\t\tmethod: method,\n\t\t\t\tid: id\n\t\t\t};\n\t\t\tif(params) {\n\t\t\t\trequest.params = params;\n\t\t\t}\n\t\t\treturn request;\n\t\t}\n\n\t\tnotification(method : string, params? : any[]) : JsonRpcNotification;\n\t\tnotification(method : string, params? : { [argName : string] : any }) : JsonRpcNotification;\n\t\tnotification(method : string, params? : any) : JsonRpcNotification {\n\t\t\tvar notification : JsonRpcNotification = {\n\t\t\t\tjsonrpc: JsonBuilder.VERSION,\n\t\t\t\tmethod: method\n\t\t\t};\n\t\t\tif(params) {\n\t\t\t\tnotification.params = params;\n\t\t\t}\n\t\t\treturn notification;\n\t\t}\n\n\t\tgenerateId() : string {\n\t\t\treturn ++$$internalIdCounter + '';\n\t\t}\n\t}\n\n\texport enum RESPONSE_ERRORS {\n\t\tPARSE_ERROR = -33700,\n\t\tINVALID_RESPONSE = -33600\n\t};\n\n\texport class JsonRpcError extends Error {\n\t\tconstructor(public code : number, public message : string, public data? : any) {\n\t\t\tsuper(message);\n\t\t\tthis.stack = (<any>new Error).stack;\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn '(' + this.code + ') ' + this.message;\n\t\t}\n\t}\n\n\texport class JsonRpcRequestError extends JsonRpcError {\n\t\tconstructor(code : number, message : string, data? : any) {\n\t\t\tsuper(code, message, data);\n\t\t}\n\t}\n\n\texport class JsonRpcResponseError extends JsonRpcError {\n\t\tconstructor(code : number, message : string, data? : any) {\n\t\t\tsuper(code, message, data);\n\t\t}\n\t}\n\n\texport class JsonRpcHttpError extends JsonRpcError {\n\t\tstatic ERRORS = {\n\t\t\t404: 'Not found'\n\t\t}\n\t\tconstructor(code : number, data? : any) {\n\t\t\tsuper(code, JsonRpcHttpError.ERRORS[code] || 'Unknown error', data);\n\t\t}\n\t}\n\n\texport class DnJsonRpcService {\n\t\tpublic static '$inject' = ['$http', '$q'];\n\n\t\tprivate jsonBuilder = new JsonBuilder();\n\n\t\tconstructor(private $http : ng.IHttpService, private $q : ng.IQService) {\n\n\t\t}\n\n\t\trequest(path : string, method : string, params? : any[], config? : ng.IRequestShortcutConfig);\n\t\trequest(path : string, method : string, params? : { [argName : string] : any }, config? : ng.IRequestShortcutConfig);\n\t\trequest(path : string, method : string, params? : any, config? : ng.IRequestShortcutConfig) {\n\t\t\tvar id = this.jsonBuilder.generateId();\n\t\t\treturn this.$http.post(path, this.jsonBuilder.request(method, id, params), config).then((response : any) => {\n\t\t\t\tif('string' === typeof response.data) {\n\t\t\t\t\treturn this.$q.reject(new JsonRpcResponseError(RESPONSE_ERRORS.PARSE_ERROR, 'Parse error'));\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * @todo  remove, not jsonrpc 2.0 conform\n\t\t\t\t */\n\t\t\t\tresponse.data.jsonrpc = '2.0';\n\t\t\t\tif(null === response.data.error) {\n\t\t\t\t\tdelete response.data.error;\n\t\t\t\t}\n\t\t\t\tif('2.0' !== response.data.jsonrpc || (('result' in response.data) === ('error' in response.data)) || !('id' in response.data)) { // a === b equals !(a XOR b)\n\t\t\t\t\treturn this.$q.reject(new JsonRpcResponseError(RESPONSE_ERRORS.INVALID_RESPONSE, 'Invalid response'));\n\t\t\t\t}\n\t\t\t\tif(id !== response.data.id) {\n\t\t\t\t\treturn this.$q.reject(new JsonRpcResponseError(RESPONSE_ERRORS.INVALID_RESPONSE, 'Invalid response', { type: 'ID_MISMATCH', expected: id, given: response.data.id }));\n\t\t\t\t}\n\t\t\t\tif('result' in response.data) {\n\t\t\t\t\treturn response.data.result;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.$q.reject(new JsonRpcRequestError(response.data.error.code, response.data.error.message, response.data.error.data));\n\t\t\t\t}\n\t\t\t}, response => {\n\t\t\t\treturn this.$q.reject(new JsonRpcHttpError(response.status, response.data));\n\t\t\t});\n\t\t}\n\n\t\tnotify(path : string, method : string, params? : any[], config? : ng.IRequestShortcutConfig);\n\t\tnotify(path : string, method : string, params? : { [argName : string] : any }, config? : ng.IRequestShortcutConfig);\n\t\tnotify(path : string, method : string, params? : any, config? : ng.IRequestShortcutConfig) {\n\t\t\treturn this.$http.post(path, this.jsonBuilder.notification(method, params), config).then((response : any) => {\n\t\t\t\tif('' === response.data) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif('string' === typeof response.data) {\n\t\t\t\t\treturn this.$q.reject(new JsonRpcResponseError(RESPONSE_ERRORS.PARSE_ERROR, 'Parse error'));\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * @todo  remove\n\t\t\t\t */\n\t\t\t\tresponse.data.jsonrpc = '2.0';\n\t\t\t\tif('2.0' !== response.data.jsonrpc || !('error' in response.data)) { // a === b equals !(a XOR b)\n\t\t\t\t\treturn this.$q.reject(new JsonRpcResponseError(RESPONSE_ERRORS.INVALID_RESPONSE, 'Invalid response'));\n\t\t\t\t}\n\t\t\t\treturn this.$q.reject(new JsonRpcRequestError(response.data.error.code, response.data.error.message, response.data.error.data));\n\t\t\t}, response => {\n\t\t\t\treturn this.$q.reject(new JsonRpcHttpError(response.status, response.data));\n\t\t\t});\n\t\t}\n\n\t\tbatch(path : string, config? : ng.IRequestShortcutConfig) {\n\t\t\tvar batch = [];\n\t\t\tvar batchApi = {\n\t\t\t\trequest: (method : string, params?: any) => {\n\t\t\t\t\tbatch.push({\n\t\t\t\t\t\ttype: 'request',\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tparams: params\n\t\t\t\t\t});\n\t\t\t\t\treturn batchApi;\n\t\t\t\t},\n\t\t\t\tnotify: (method : string, params?: any) => {\n\t\t\t\t\tbatch.push({\n\t\t\t\t\t\ttype: 'notification',\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\tparams: params\n\t\t\t\t\t});\n\t\t\t\t\treturn batchApi;\n\t\t\t\t},\n\t\t\t\texec: () : any => {\n\t\t\t\t\tif(0 === batch.length) return this.$q.when([]);\n\t\t\t\t\tvar requestCount = 0, id, ids = [];\n\t\t\t\t\tbatch = batch.map(e => 'request' === e.type \n\t\t\t\t\t\t? (++requestCount, id = this.jsonBuilder.generateId(), ids.push(id), this.jsonBuilder.request(e.method, id, e.params))\n\t\t\t\t\t\t: this.jsonBuilder.notification(e.method, e.params));\n\n\t\t\t\t\treturn this.$http.post(path, batch, config).then((response : any) => {\n\t\t\t\t\t\tif(0 === requestCount && '' === response.data) {\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif('string' === typeof response.data) {\n\t\t\t\t\t\t\treturn this.$q.reject(new JsonRpcResponseError(RESPONSE_ERRORS.PARSE_ERROR, 'Parse error'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @todo  remove\n\t\t\t\t\t\t */\n\t\t\t\t\t\tresponse.data.jsonrpc = '2.0';\n\t\t\t\t\t\tif('2.0' == response.data.jsonrpc && 'error' in response.data && 'id' in response.data) {\n\t\t\t\t\t\t\treturn this.$q.reject(new JsonRpcRequestError(response.data.error.code, response.data.error.message, response.data.error.data));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!Array.isArray(response.data) || requestCount !== response.data.length) {\n\t\t\t\t\t\t\treturn this.$q.reject(new JsonRpcResponseError(RESPONSE_ERRORS.INVALID_RESPONSE, 'Invalid response'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn response.data.map(data => {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @todo  remove\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tdata.jsonrpc = '2.0';\n\t\t\t\t\t\t\tif('2.0' !== data.jsonrpc || (('result' in data) === ('error' in data)) || !('id' in data)) { // a === b equals !(a XOR b)\n\t\t\t\t\t\t\t\treturn new JsonRpcResponseError(RESPONSE_ERRORS.INVALID_RESPONSE, 'Invalid response');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!~ids.indexOf(data.id)) {\n\t\t\t\t\t\t\t\treturn new JsonRpcResponseError(RESPONSE_ERRORS.INVALID_RESPONSE, 'Invalid response', { type: 'ID_MISMATCH', expected: ids, given: data.id });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif('result' in data) {\n\t\t\t\t\t\t\t\treturn data.result;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn new JsonRpcRequestError(data.error.code, data.error.message, data.error.data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}, response => {\n\t\t\t\t\t\treturn this.$q.reject(new JsonRpcHttpError(response.status, response.data));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn batchApi;\n\t\t}\n\t}\n\n\tangular.module('dnJsonRpc', [])\n\t\t.service('DnJsonRpcService', DnJsonRpcService);\n}"]}